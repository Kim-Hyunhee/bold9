type User {
  id: ID!
  email: String!
  name: String
  createdAt: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  content: String
  published: Boolean!
  author: User!
  createdAt: String!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  content: String!
  post: Post!
  createdAt: String!
}

type Query {
  # 모든 사용자 조회
  users: [User!]!
  # 특정 사용자 조회
  user(id: ID!): User
  # 모든 게시글 조회
  posts: [Post!]!
  # 특정 게시글 조회
  post(id: ID!): Post
  # 특정 게시글의 댓글 조회
  commentsByPost(postId: ID!): [Comment!]!
}

type Mutation {
  # 사용자 생성
  createUser(email: String!, password: String!, name: String): User!
  # 게시글 생성
  createPost(title: String!, content: String, authorId: ID!): Post!
  # 댓글 생성
  createComment(content: String!, postId: ID!): Comment!
}
